//Created By : Ren Cosmos
//Date : Jan 22,2022
//Description: This program uses synchronous keys for encrypting or decrypting a plain text. If key K1 is used for encrypting a plain text, then only K1 can decrypt the cypher text.
//                               PlainText  ----K1---->  CypherText  (ENCRYPTION)
//                               CypherText ----K1---->  PlainText   (DECRYPTION)
// The key is generated by shuffling the ASCII characters from 32 to 126 in the ASCII Table.
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class EncryptionProgram {
	
	private Scanner scanner; // for user input
	private ArrayList<Character> list; // stores ASCII characters from 32 to 126
	private ArrayList<Character> shuffledList; // stores generated key characters
	private char character; // hlds ASCII character values
	private char[] letters; // either stores plain text or cypher text
	

	public EncryptionProgram()
	{
		scanner = new Scanner(System.in);
		list = new ArrayList<>();
		shuffledList = new ArrayList<>();
		character = ' '; // initially, stores value of character # 32 in ASCII table
		
		newKey(); // a key is automaticaally generated when the program starts
		askQuestion(); // asking for user input
	}
	
	private void askQuestion()
	{
		while(true)
		{
			System.out.println("***********************************************");
			System.out.println("What do you want to do?");
			System.out.println("(N)ewKey, (G)etKey, (E)ncrypt (D)ecrypt, (Q)uit");
			char response = Character.toUpperCase(scanner.nextLine().charAt(0)); // takes the first chracter of the user input
			
			switch (response)
			{
			case 'N':
				newKey();
				break;
				
			case 'G':
				getKey();
				break;
				
			case 'E':
				encrypt();
				break;
				
			case 'D':
				decrypt();
				break;
				
			case 'Q':
				quit();
				break;
				
			default:
				System.out.println("Not a valid answer :(");
			}
		}
	}
	
	private void newKey()
	{
		character = ' ';
		list.clear();
		shuffledList.clear();
		
		for (int i = 32; i < 127; i++ )
		{
			list.add(Character.valueOf(character)); //adds the ASCII char objects strting from char # 32 to list using the char values
			character++;
		}
		
		shuffledList = new ArrayList<>(list); // creating a duplicate of list in shuffledList
		Collections.shuffle(shuffledList); // shuffling the shuffledlist
		System.out.println("*A new key has been generated*");
	}
	
	private void getKey()
	{
		System.out.println("Key: ");
		// Displaying list which stores ASCII characters from 32 to 126
		for (Character x : list)
		{
			System.out.print(x);
		}
		System.out.println();
		// Displaying shuffled list i.e Key used for encryption or decryption
		for (Character x : shuffledList)
		{
			System.out.print(x);
		}
		System.out.println();
	}
	
	private void encrypt()
	{
		System.out.println("Enter a message to get Encrypted: ");
		String message = scanner.nextLine();
		
		letters = message.toCharArray();
		
		for (int i = 0; i < letters.length; i++)
		{
			for (int j = 0; j < list.size(); j++)
			{
				if (letters[i] == list.get(j))
				{
					letters[i] = shuffledList.get(j);
					break;
				}
			}
		}
		System.out.println("Encrypted Message: ");
		for (char c : letters)
		{
			System.out.print(c);
		}
		System.out.println();
	}
	
	private void decrypt()
	{
		System.out.println("Enter a message to get Decrypted: ");
		String message = scanner.nextLine();
		
		letters = message.toCharArray(); // creates a char array of msg to be decrypted
		
		for (int i = 0; i < letters.length; i++) // traversing through each char in msg array
		{
			for (int j = 0; j < shuffledList.size(); j++) // traversing through each char in shuffledList
			{
				if (letters[i] == shuffledList.get(j))
				{
					letters[i] = list.get(j);
					break;
				}
			}
		}
		System.out.println("Decrypted Message: ");
		for (char c : letters)
		{
			System.out.print(c);
		}
		System.out.println();
	}
	
	private void quit()
	{
		System.out.println("Thank you, have a nice day bro!");
		System.exit(0);
	}
}
